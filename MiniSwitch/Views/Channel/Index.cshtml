@model PaginatedList<Channel>
@{
    ViewData["Title"] = "Channel Management";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}
<link rel="stylesheet" href="~/css/user.css" />

<div class="container">
    <p class="text-center text-success">@TempData["Success"]</p>
    <p class="text-center text-danger">@TempData["Error"]</p>

    <button class="mt-3 btn-sm col-md-3" type="button" data-toggle="modal" data-target="#modal">Add New Channel</button>
    <form asp-action="Index" method="get">
        <div class="form-actions no-color col-md-12 mt-5">
            <div class="row">
                <p>Search:</p>
                <input type="text" class="form-control col-md-3 m-1" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <button type="submit" class="btn-sm col-md-2 m-1">Search</button>
                <hr />
                <a asp-action="Index" class="m-1">Back to Full List</a>
            </div>
        </div>
    </form>
    <table id="meetingTable" class="table table-striped table-hover table-sm table-bordered">
        <thead class="">
            <tr>
                <th class="col-md-2">Id</th>
                <th class="col-md-4">Name</th>
                <th class="col-md-3">Code</th>
                <th class="col-md-3">Description</th>
            </tr>
        </thead>
        <tbody>
            @{
                if (Model != null)
                {
                    if (Model.Count > 0)
                    {
                        foreach (var channel in Model)
                        {
                            <tr>
                                <td class="col-md-2">@string.Join("", channel.Id.ToString().Take(10))...</td>
                                <td class="col-md-4">@channel.Name</td>
                                <td class="col-md-3">@channel.Code</td>
                                <td class="col-md-3">@channel.Description</td>
                                <td class="col-md-2"><button class="btn-sm" id="@channel.Id.ToString()" type="button" data-toggle="modal" data-target="#editModal" onclick="GetEditNode(event)">Edit</button></td>
                            </tr>
                        }

                        <div class="">
                            @if (Model.HasPreviousPage)
                            {
                                <button class="text-left mr-5 btn-sm" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)">Previous</button>
                            }
                            @if (Model.HasNextPage)
                            {
                                <button class="text-right ml-5 btn-sm" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)">Next</button>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-center">No Transaction Types added yet. Add a Transaction Type</p>
                    }
                }
            }
        </tbody>
    </table>


    <div id="modal" class="modal">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body m-3">
                    <h3 class="text-center mb-3">Channel</h3>
                    <form method="post" asp-action="Create" asp-controller="Channel">
                        <div class="row">
                            <input class="form-control m-2 col-md-5" name="Name" type="text" placeholder="Name" required />
                            <input class="form-control m-2 col-md-5" name="Code" type="text" placeholder="Code" required />
                            <textarea class="form-control m-2 col-md-10" name="Description" type="text" placeholder="Description" required></textarea>

                            @*<input class="form-control m-2 col-md-5" name="Port" type="text" placeholder="Port" required />
                                <div class="">
                                    <select name="Status" class="form-control m-2" required>
                                        <option value="">Select Node Status</option>
                                        @foreach (var status in System.Enum.GetValues(typeof(MiniSwitch.Enums.NodeStatusEnum)))
                                        {
                                            <option class="m-1" value="@status" asp-for="Status">@status</option>
                                        }
                                    </select>
                                </div>*@
                        </div>
                        <button class="mt-3 btn-sm" type="submit">Submit</button>
                    </form>
                </div>
            </div>
        </div>
    </div>



    <div id="editModal" class="modal">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body m-3">
                    <h3 class="text-center mb-3">Channel</h3>
                    <form method="post" asp-action="Edit" asp-controller="Channel">
                        <div class="row">
                            <input class="form-control m-2 col-md-5" id="editId" name="Id" type="text" placeholder="Id" required hidden />

                            <input class="form-control m-2 col-md-5" name="Name" type="text" placeholder="Name" required />
                            <input class="form-control m-2 col-md-5" name="Code" type="text" placeholder="Code" required />
                            <textarea class="form-control m-2 col-md-10" name="Description" type="text" placeholder="Description" required></textarea>

                            @*<input class="form-control m-2 col-md-5" id="editPort" name="Port" type="text" placeholder="Port" required />
                                <div class="">
                                    <select id="editStatus" name="Status" class="form-control m-2" required>
                                        <option value="">Select Node Status</option>
                                        @foreach (MiniSwitch.Enums.NodeStatusEnum status in System.Enum.GetValues(typeof(MiniSwitch.Enums.NodeStatusEnum)))
                                        {
                                            <option class="m-1" value="@status" asp-for="Status">@status</option>
                                        }
                                    </select>
                                </div>*@
                        </div>
                        <button class="mt-3 btn-sm" type="submit">Submit</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>function GetEditNode(event) {
        var target = event.target || event.srcElement;

        document.getElementById("editId").value = target.id;
    }</script>